networks:
    default:
        name: sales-mate-network
        external: true
services:
    sales-mate-frontend-react:
        image: sales-mate-frontend-react
        container_name: sales-mate-frontend-react
        ports:
            - "3000:3000"
        volumes:
            - ./frontend-react:/app
        environment:
            DEV: "0"
        depends_on:
            - sales-mate-api-service
    rag-copilot-pipeline:
        image: rag-copilot-pipeline
        container_name: rag-copilot-pipeline
        volumes:
            - ${SECRETS_DIR_COPILOT}:/secrets
            - ./rag_copilot_pipeline:/app
        ports:
            - 8081:8081 # Expose the FastAPI port to host
        environment:
            GOOGLE_APPLICATION_CREDENTIALS: "/secrets/gcp-key.json"
            GCP_PROJECT: "dulcet-doodad-443815-n3"
            DEV: "${DEV}" # Change to 0 for running web server
        healthcheck:
            test: ["CMD", "curl", "-f", "http://rag-copilot-pipeline:8081/"]
            interval: 30s
            timeout: 5s
            retries: 5
            start_period: 30s
        depends_on:
            - chromadb
    sales-mate-api-service:
        image: sales-mate-api-service
        container_name: sales-mate-api-service
        volumes:
            - ${SECRETS_DIR_API}:/secrets
            - ./api_service:/app
            - ./api_service:/persistent
        ports:
            - 9876:9876 # Expose the FastAPI port to host
        environment:
            GOOGLE_APPLICATION_CREDENTIALS: "/secrets/llm-service-account.json"
            GCP_PROJECT: "project-id-3187519002330642642"
            DEV: ${DEV} # Change to 0 for running web server
            FINETUNED_MODEL: "1" # Toggle for using finetuned model or not
            RAG_COLLECTION_NAME: "investment-management"
        healthcheck:
            test: ["CMD", "curl", "-f", "http://sales-mate-api-service:9876/"]
            interval: 30s
            timeout: 5s
            retries: 5
            start_period: 30s
        depends_on:
            - rag-copilot-pipeline
    chromadb:
        image: chromadb/chroma:latest
        container_name: llm-rag-chromadb
        ports:
            - 8000:8000
        volumes:
            - ./rag_copilot_pipeline/docker-volumes/chromadb:/chroma/chroma
        environment:
            - IS_PERSISTENT=TRUE
            - ANONYMIZED_TELEMETRY=FALSE
            - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"] # This is not recommended for production environments.
